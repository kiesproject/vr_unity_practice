制作者：吉村 秀太

採点者：伊藤雄河

****************************************************************************************************************

得点は、採点者の裁量でつけられています。基準などはあまり無いので参考程度にしてください。
ここに書いてあるアドバイス等は、採点者の趣向も含まれているのでそれが正解というわけではありません。

・可読性(5点)　		…　プログラムの書き方・コメントを付けているか・インデントは正しくなされているか。他の人から見て読みやすいかなど
・UI(5点)				…　UIを有効に使っているかなど
・最適化(10点)			…　for文や論理演算を駆使して、プログラムを簡潔に書いているかなど
・技術点(10点)			…　ちょっと難しい技術を使っていたり、アルゴリズムを有効に使っているか、オブジェクト指向など
・オリジナリティ(5点)	…　ミニゲームとして作るときオリジナリティがあるか、または良いアイデアであるか
・完成度(5点)			…　完成しているのか、またどれくらい出来ているのか(ミニゲームとして遊べるまでを完成とする)
・努力(10点)			…　プログラムやアピールポイントなどを見て「頑張ったんだなぁ」と感じれるか
合計50点

****************************************************************************************************************

〇あなたの得点
	・可読性　		4点	/5点
	・UI				2点	/5点
	・最適化			6点	/10点
	・技術点			5点	/10点
	・オリジナリティ	3点	/5点
	・完成度			5点	/5点
	・努力			10点	/10点
	・合計			35点


〇プレイした感想
	ジャンプボタンを押すたびに実体化するギミックはシンプルですが頭を使うので面白かったです。
	難易度的にも簡単すぎずそこそこ手ごたえのあるゲームに仕上がっていたと思います。
	よくできているなと思いました！
	操作方法などのUIを表示すると遊びやすくなるかも知れないですね、最初少し操作方法に迷いました…。
	
	
〇unity面
	よく使えていると思います。
	
	
〇script面
	小文字から始まるクラスがありましたが…クラスの名前は大文字で始まることが多いです。これは一目でクラスと判別するためです。
	このルールは実際の開発などでプログラミングのセオリーとなっています。今後はクラスは大文字にする癖をつけると良いでしょう。
	
	Application.LoadLevel()が使用されていましたが、現在はSceneManager.LoadScene()を使用することが推奨されています。
	
	書きこまれているのに使われていないプログラムもあったので、きっと試行錯誤を繰り返し頑張ったんだと思いました。
	
	
〇アドバイス
	今回のケースではあまり影響はないと思いますが、ジャンプせずに落下すると空中でジャンプできてしまいます。
	それを防ぐには着地している時にだけジャンプ出来るようにすればいいんですが…その片鱗は残っていたので実装しようとしたんだと思います。
	地面検出が出来なかったのかな、と思ったのでその辺りを助言されてもらいます。
	
	地面検出を行うには、onTriggerにチェックをいれたオブジェクトをプレイヤーの下に置いてOnTriggerStay()・OnTriggerExit()で切り替える方法と
	プレイヤーから真下にRayを伸ばして検出して切り替える方法(おすすめ)があります。考えてみてください。
	わからないことがあれば、直接でもslackでもいいので伊藤に聞いてください。


